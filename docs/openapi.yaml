openapi: 3.1.0
info:
  title: OpenAPI Specification
  version: 1.0.0
  description: "OpenAPI spec for network and email diagnostic tools, covering SMTP, DNS, authentication, and network diagnostics."
paths:
  /api/v1/smtp/connect/{host}:
    post:
      operationId: connect_smtp
      tags:
        - smtp
      summary: /api/v1/smtp/connect/{host}
      description: Establishes an SMTP connection to the specified host and port
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                description: Details of the SMTP connection attempt.
                properties:
                  host:
                    type: string
                    description: The target host for the SMTP connection.
                  port:
                    type: string # Changed from integer
                    description: The port used for the SMTP connection (e.g., "25", "587").
                  connected:
                    type: boolean
                    description: Indicates if the SMTP connection was successful.
                  supports_start_tls: # Renamed from supportsStartTLS
                    type: boolean
                    description: Indicates if the SMTP server supports STARTTLS.
                  error:
                    type: string
                    description: Error message if the connection failed or an issue occurred.
                required:
                  - host
                  - port
                  - connected
                  - supports_start_tls # Updated
                  - error
          description: ""
          headers: {}
      security: []
      parameters:
        - name: host
          in: path
          required: true
          description: The host to connect to (e.g., domain.com or mail.domain.com).
          schema:
            type: string
        - name: port
          in: query
          required: false
          description: The port number for the SMTP connection (e.g., "25", "587", "465"). Defaults to "25" if not provided.
          schema:
            type: string
  /api/v1/smtp/starttls/{host}:
    post:
      operationId: check_start_tls
      tags:
        - smtp
      summary: /api/v1/smtp/starttls/{host}
      description: Checks STARTTLS support for a given host by connecting to its MX records.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                description: Results of STARTTLS check for the host's MX records.
                properties:
                  host:
                    type: string
                    description: The target host for which STARTTLS support was checked.
                  mx_records: # Renamed from mxRecords
                    type: array
                    description: List of MX records found for the host.
                    items:
                      type: string
                      description: An MX record.
                  connection_status: # Renamed from connectionStatus
                    type: object
                    description: Connection status for each MX server. The keys are identifiers for the MX servers.
                    properties:
                      mx_server_1: # Renamed from alt1.aspmx.l.google.com
                        type: object
                        description: Connection and STARTTLS status for an individual MX server.
                        properties:
                          host:
                            type: string
                            description: The MX server hostname.
                          port:
                            type: string # Changed from integer
                            description: The port used to connect to the MX server (e.g., "25", "587").
                          connected:
                            type: boolean
                            description: Indicates if connection to the MX server was successful.
                          supports_start_tls: # Renamed from supportsStartTLS
                            type: boolean
                            description: Indicates if the MX server supports STARTTLS.
                          error:
                            type: string
                            description: Error message if connection or STARTTLS check failed for this MX server.
                        required:
                          - host
                          - port
                          - connected
                          - supports_start_tls # Updated
                          - error
                      mx_server_2: # Renamed from alt2.aspmx.l.google.com
                        type: object
                        description: Connection and STARTTLS status for an individual MX server.
                        properties:
                          host:
                            type: string
                            description: The MX server hostname.
                          port:
                            type: string # Changed from integer
                            description: The port used to connect to the MX server (e.g., "25", "587").
                          connected:
                            type: boolean
                            description: Indicates if connection to the MX server was successful.
                          supports_start_tls: # Renamed from supportsStartTLS
                            type: boolean
                            description: Indicates if the MX server supports STARTTLS.
                          error:
                            type: string
                            description: Error message if connection or STARTTLS check failed for this MX server.
                        required:
                          - host
                          - port
                          - connected
                          - supports_start_tls # Updated
                          - error
                      mx_server_3: # Renamed from aspmx.l.google.com
                        type: object
                        description: Connection and STARTTLS status for an individual MX server.
                        properties:
                          host:
                            type: string
                            description: The MX server hostname.
                          port:
                            type: string # Changed from integer
                            description: The port used to connect to the MX server (e.g., "25", "587").
                          connected:
                            type: boolean
                            description: Indicates if connection to the MX server was successful.
                          supports_start_tls: # Renamed from supportsStartTLS
                            type: boolean
                            description: Indicates if the MX server supports STARTTLS.
                          error:
                            type: string
                            description: Error message if connection or STARTTLS check failed for this MX server.
                        required:
                          - host
                          - port
                          - connected
                          - supports_start_tls # Updated
                          - error
                      mx_server_4: # Renamed from aspmx2.googlemail.com
                        type: object
                        description: Connection and STARTTLS status for an individual MX server.
                        properties:
                          host:
                            type: string
                            description: The MX server hostname.
                          port:
                            type: string # Changed from integer
                            description: The port used to connect to the MX server (e.g., "25", "587").
                          connected:
                            type: boolean
                            description: Indicates if connection to the MX server was successful.
                          supports_start_tls: # Renamed from supportsStartTLS
                            type: boolean
                            description: Indicates if the MX server supports STARTTLS.
                          error:
                            type: string
                            description: Error message if connection or STARTTLS check failed for this MX server.
                        required:
                          - host
                          - port
                          - connected
                          - supports_start_tls # Updated
                          - error
                      mx_server_5: # Renamed from aspmx3.googlemail.com
                        type: object
                        description: Connection and STARTTLS status for an individual MX server.
                        properties:
                          host:
                            type: string
                            description: The MX server hostname.
                          port:
                            type: string # Changed from integer
                            description: The port used to connect to the MX server (e.g., "25", "587").
                          connected:
                            type: boolean
                            description: Indicates if connection to the MX server was successful.
                          supports_start_tls: # Renamed from supportsStartTLS
                            type: boolean
                            description: Indicates if the MX server supports STARTTLS.
                          error:
                            type: string
                            description: Error message if connection or STARTTLS check failed for this MX server.
                        required:
                          - host
                          - port
                          - connected
                          - supports_start_tls # Updated
                          - error
                    required:
                      - mx_server_1 # Updated
                      - mx_server_2 # Updated
                      - mx_server_3 # Updated
                      - mx_server_4 # Updated
                      - mx_server_5 # Updated
                required:
                  - host
                  - mx_records # Updated
                  - connection_status # Updated
          description: ""
          headers: {}
      security: []
      parameters:
        - name: host
          in: path
          required: true
          description: The host (domain) for which to check STARTTLS support on its MX records.
          schema:
            type: string
  /api/v1/auth/spf/{host}:
    post:
      operationId: get_spf_record
      tags:
        - auth
      summary: /api/v1/auth/spf/{host}
      description: Retrieves SPF (Sender Policy Framework) record for the given host.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                description: Details of the SPF record check.
                properties:
                  domain:
                    type: string
                    description: The domain for which the SPF record was checked.
                  has_record: # Renamed from hasRecord
                    type: boolean
                    description: Indicates if an SPF record was found.
                  record:
                    type: string
                    description: The raw SPF record string.
                  is_valid: # Renamed from isValid
                    type: boolean
                    description: Indicates if the SPF record is valid.
                  mechanisms:
                    type: array
                    description: List of mechanisms found in the SPF record.
                    items:
                      type: string
                      description: An SPF record mechanism.
                required:
                  - domain
                  - has_record # Updated
                  - record
                  - is_valid # Updated
                  - mechanisms
          description: ""
          headers: {}
      security: []
      parameters:
        - name: host
          in: path
          required: true
          description: The domain for which to retrieve the SPF record.
          schema:
            type: string
  /api/v1/auth/dmarc/{host}:
    post:
      operationId: get_dmarc_record
      tags:
        - auth
      summary: /api/v1/auth/dmarc/{host}
      description: Retrievesthe DMARC (Domain-based Message Authentication, Reporting & Conformance) record for the given host.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                description: Details of the DMARC record check.
                properties:
                  domain:
                    type: string
                    description: The domain for which the DMARC record was checked.
                  has_record: # Renamed from hasRecord
                    type: boolean
                    description: Indicates if a DMARC record was found.
                  record:
                    type: string
                    description: The raw DMARC record string.
                  is_valid: # Renamed from isValid
                    type: boolean
                    description: Indicates if the DMARC record is valid.
                  policy:
                    type: string
                    description: The DMARC policy (e.g., none, quarantine, reject).
                  percentage:
                    type: integer
                    description: The percentage of messages to which the DMARC policy applies.
                required:
                  - domain
                  - has_record # Updated
                  - record
                  - is_valid # Updated
                  - policy
                  - percentage
          description: ""
          headers: {}
      security: []
      parameters:
        - name: host
          in: path
          required: true
          description: The domain for which to retrieve the DMARC record.
          schema:
            type: string
  /api/v1/dns/{host}:
    post:
      operationId: get_dns_records
      tags:
        - dns
      summary: /api/v1/dns/{host}
      description: Performs DNS lookups for various record types (A, AAAA, CNAME, MX, NS, SOA, TXT) for the specified host.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                description: Collection of DNS records for the specified host.
                properties:
                  records:
                    type: object
                    description: DNS records categorized by type.
                    properties:
                      A:
                        type: array
                        description: List of A records.
                        items:
                          type: string
                          description: An A record (IPv4 address).
                      AAAA:
                        type: array
                        description: List of AAAA records.
                        items:
                          type: string
                          description: An AAAA record (IPv6 address).
                      CNAME:
                        type: array
                        description: List of CNAME records.
                        items:
                          type: string
                          description: A CNAME record (canonical name).
                      MX:
                        type: array
                        description: List of MX records.
                        items:
                          type: string
                          description: An MX record (mail exchange).
                      NS:
                        type: array
                        description: List of NS records.
                        items:
                          type: string
                          description: An NS record (name server).
                      SOA:
                        type: array
                        description: List of SOA records.
                        items:
                          type: string
                          description: An SOA record (start of authority).
                      TXT:
                        type: array
                        description: List of TXT records.
                        items:
                          type: string
                          description: A TXT record (text).
                    required:
                      - A
                      - AAAA
                      - CNAME
                      - MX
                      - NS
                      - SOA
                      - TXT
                required:
                  - records
          description: ""
          headers: {}
      security: []
      parameters:
        - name: host
          in: path
          required: true
          description: The host (domain or subdomain) for which to perform DNS lookups.
          schema:
            type: string
  /api/v1/blacklist/{host}:
    post:
      operationId: check_blacklist
      tags:
        - blacklist
      summary: /api/v1/blacklist/{host}
      description: Checks if the IP address of the given host is listed on common DNS-based blacklists.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                description: Blacklist check results for the host's IP address.
                properties:
                  ip:
                    type: string
                    description: The IP address that was checked against blacklists.
                  listed_on: # Renamed from listedOn
                    type: object
                    description: An object where keys are blacklist names and values indicate if listed.
                  error:
                    type: string
                    description: Error message if the blacklist check failed.
                required:
                  - ip
                  - listed_on # Updated
                  - error
          description: ""
          headers: {}
      security: []
      parameters:
        - name: host
          in: path
          required: true
          description: The host (domain or IP address) to check against DNS blacklists.
          schema:
            type: string
  /api/v1/network/ping/{host}:
    post:
      operationId: ping_host
      tags:
        - network
      summary: /api/v1/network/ping/{host}
      description: Pings the specified host to check network connectivity and measures round-trip times.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                description: Results of the ping operation.
                properties:
                  tool:
                    type: string
                    description: Name of the tool used for pinging.
                  target:
                    type: string
                    description: The target host that was pinged.
                  ping_result: # Renamed from pingResult
                    type: object
                    description: Detailed results of the ping.
                    properties:
                      target:
                        type: string
                        description: The target host of the ping.
                      resolved_ip: # Renamed from resolvedIP
                        type: string
                        description: The resolved IP address of the target.
                      success:
                        type: boolean
                        description: Indicates if the ping was successful.
                      rtts:
                        type: array
                        description: List of round-trip times for each packet.
                        items:
                          type: string
                          description: Round-trip time for a packet.
                      avg_rtt: # Renamed from avgRTT
                        type: string
                        description: Average round-trip time.
                      min_rtt: # Renamed from minRTT
                        type: string
                        description: Minimum round-trip time.
                      max_rtt: # Renamed from maxRTT
                        type: string
                        description: Maximum round-trip time.
                      packets_sent: # Renamed from packetsSent
                        type: integer
                        description: Number of packets sent.
                      packets_received: # Renamed from packetsReceived
                        type: integer
                        description: Number of packets received.
                      packet_loss: # Renamed from packetLoss
                        type: integer
                        description: Percentage of packet loss.
                    required:
                      - target
                      - resolved_ip # Updated
                      - success
                      - rtts
                      - avg_rtt # Updated
                      - min_rtt # Updated
                      - max_rtt # Updated
                      - packets_sent # Updated
                      - packets_received # Updated
                      - packet_loss # Updated
                required:
                  - tool
                  - target
                  - ping_result # Updated
          description: ""
          headers: {}
      security: []
      parameters:
        - name: host
          in: path
          required: true
          description: The host (domain or IP address) to ping.
          schema:
            type: string
  /api/v1/network/traceroute/{host}:
    post:
      operationId: traceroute_host
      tags:
        - network
      summary: /api/v1/network/traceroute/{host}
      description: Traces the network path to the specified host, showing intermediate hops.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                description: Results of the traceroute operation.
                properties:
                  tool:
                    type: string
                    description: Name of the tool used for traceroute.
                  target:
                    type: string
                    description: The target host for the traceroute.
                  traceroute_result: # Renamed from tracerouteResult
                    type: object
                    description: Detailed results of the traceroute.
                    properties:
                      target:
                        type: string
                        description: The target host of the traceroute.
                      resolved_ip: # Renamed from resolvedIP
                        type: string
                        description: The resolved IP address of the target.
                      hops:
                        type: array
                        description: List of hops in the traceroute path.
                        items:
                          type: object
                          description: Details of a single hop in the traceroute.
                          properties:
                            number:
                              type: integer
                              description: Hop number.
                            ip:
                              type: string
                              description: IP address of the hop.
                            hostname:
                              type: string
                              description: Hostname of the hop (if resolved).
                            rtt:
                              type: string
                              description: Round-trip time to the hop.
                          required:
                            - number
                            - ip
                            - hostname
                            - rtt
                      target_reached: # Renamed from targetReached
                        type: boolean
                        description: Indicates if the target was reached.
                    required:
                      - target
                      - resolved_ip # Updated
                      - hops
                      - target_reached # Updated
                required:
                  - tool
                  - target
                  - traceroute_result # Updated
          description: ""
          headers: {}
      security: []
      parameters:
        - name: host
          in: path
          required: true
          description: The host (domain or IP address) to trace the route to.
          schema:
            type: string
  /api/v1/network/whois/{host}:
    post:
      operationId: get_whois_info
      tags:
        - network
      summary: /api/v1/network/whois/{host}
      description: Retrieves WHOIS information for the specified domain, including registrar and registration dates.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                description: Results of the WHOIS lookup.
                properties:
                  tool:
                    type: string
                    description: Name of the tool used for WHOIS lookup.
                  target:
                    type: string
                    description: The target domain for the WHOIS lookup.
                  whois_result: # Renamed from whoisResult
                    type: object
                    description: Detailed WHOIS information.
                    properties:
                      target:
                        type: string
                        description: The target domain of the WHOIS lookup.
                      registrar:
                        type: string
                        description: Registrar of the domain.
                      created_date: # Renamed from createdDate
                        type: string
                        description: Creation date of the domain registration.
                      expiration_date: # Renamed from expirationDate
                        type: string
                        description: Expiration date of the domain registration.
                      name_servers: # Renamed from nameServers
                        type: array
                        description: List of name servers for the domain.
                        items:
                          type: string
                          description: A name server.
                      raw_data: # Renamed from rawData
                        type: string
                        description: Raw WHOIS data.
                    required:
                      - target
                      - registrar
                      - created_date # Updated
                      - expiration_date # Updated
                      - name_servers # Updated
                      - raw_data # Updated
                required:
                  - tool
                  - target
                  - whois_result # Updated
          description: ""
          headers: {}
      security: []
      parameters:
        - name: host
          in: path
          required: true
          description: "The host (domain name) for which to retrieve WHOIS information. Note: This path parameter is used as the primary target. The 'domain' query parameter can be used alternatively if needed, but the path parameter takes precedence."
          schema:
            type: string
        - name: domain
          in: query
          required: false
          description: "The domain name for which to retrieve WHOIS information. This is an alternative to the path parameter if a different target is needed for WHOIS specifically."
          schema:
            type: string
  /api/v1/auth/dkim/{host}:
    post:
      operationId: get_dkim_records
      tags:
        - auth
      summary: /api/v1/auth/dkim/{host}
      description: Checks for DKIM (DomainKeys Identified Mail) records for the given host using common selectors (mail and google).
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                description: Results of DKIM record checks for common selectors.
                properties:
                  domain:
                    type: string
                    description: The domain for which DKIM records were checked.
                  results:
                    type: array
                    description: List of DKIM check results for each selector.
                    items:
                      type: object
                      description: DKIM check result for a specific selector.
                      properties:
                        domain:
                          type: string
                          description: The domain checked.
                        selector:
                          type: string
                          description: The DKIM selector used.
                        has_records: # Renamed from hasRecords
                          type: boolean
                          description: Indicates if DKIM records were found for this selector.
                        is_valid: # Renamed from isValid
                          type: boolean
                          description: Indicates if the found DKIM records are valid.
                        error:
                          type: string
                          description: Error message if the check failed for this selector.
                      required:
                        - domain
                        - selector
                        - has_records # Updated
                        - is_valid # Updated
                        - error
                  is_valid: # Renamed from isValid
                    type: boolean
                    description: Overall DKIM validity status (e.g., if at least one selector is valid).
                  selectors:
                    type: array
                    description: List of selectors that were checked.
                    items:
                      type: string
                      description: A DKIM selector.
                required:
                  - domain
                  - results
                  - is_valid # Updated
                  - selectors
          description: ""
          headers: {}
      security: []
      parameters:
        - name: host
          in: path
          required: true
          description: The domain for which to check DKIM records using common selectors.
          schema:
            type: string
  /api/v1/auth/dkim/{host}/{selector}:
    post:
      operationId: get_dkim_record_by_selector
      tags:
        - auth
      summary: /api/v1/auth/dkim/{host}/{selector}
      description: Retrieves and validates the DKIM (DomainKeys Identified Mail) record for the given host and specific selector.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                description: Details of the DKIM record check for a specific selector.
                properties:
                  domain:
                    type: string
                    description: The domain for which the DKIM record was checked.
                  selector:
                    type: string
                    description: The specific DKIM selector used.
                  has_records: # Renamed from hasRecords
                    type: boolean
                    description: Indicates if DKIM records were found for this selector.
                  records: # This was 'records', assuming it might contain multiple records or a structured record.
                    type: object # Changed from specific 'google' to generic object
                    description: The DKIM record(s) found. Structure may vary.
                    properties:
                      # Example property, actual structure might differ
                      record_value:
                        type: string
                        description: The value of the DKIM record.
                    # 'required' for this sub-object would depend on actual known structure
                    # For now, let's assume no specific sub-properties are always required
                    # required:
                    #   - record_value
                  is_valid: # Renamed from isValid
                    type: boolean
                    description: Indicates if the found DKIM record is valid.
                required:
                  - domain
                  - selector
                  - has_records # Updated
                  - records
                  - is_valid # Updated
          description: ""
          headers: {}
      security: []
      parameters:
        - name: host
          in: path
          required: true
          description: The domain for which to retrieve the DKIM record.
          schema:
            type: string
        - name: selector
          in: path
          required: true
          description: The specific DKIM selector to use for the lookup.
          schema:
            type: string
components: {}
