openapi: 3.0.3
info:
  title: MXClone API
  description: API for MXToolbox clone providing DNS, blacklist, SMTP, email authentication, and network diagnostics
  version: 1.0.0
  contact:
    name: MXClone Team
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080/api/v1
    description: Local development server (versioned API)
  - url: http://localhost:8080/api
    description: Local development server (legacy API)

tags:
  - name: dns
    description: DNS lookup operations
  - name: blacklist
    description: IP and domain blacklist checking
  - name: smtp
    description: SMTP server diagnostics
  - name: email-auth
    description: Email authentication (SPF, DKIM, DMARC)
  - name: network
    description: Network tools (ping, traceroute, WHOIS)
  - name: health
    description: System health and status

paths:
  # Health endpoint
  /api/v1/health:
    get:
      tags:
        - health
      summary: Check API health
      description: Returns the health status of the API
      operationId: getHealth
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  version:
                    type: string
                    example: v1

  # DNS endpoints
  /api/v1/dns:
    post:
      tags:
        - dns
      summary: Perform DNS lookups
      description: Performs DNS lookups for multiple record types
      operationId: dnsLookup
      requestBody:
        description: Domain to check
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DNSResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Blacklist endpoints
  /api/v1/blacklist:
    post:
      tags:
        - blacklist
      summary: Check IP or domain against blacklists
      description: Checks if an IP or domain is listed in DNS blacklists
      operationId: blacklistCheck
      requestBody:
        description: IP or domain to check
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlacklistResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  # SMTP endpoints
  /api/v1/smtp:
    post:
      tags:
        - smtp
      summary: Check SMTP server
      description: Performs comprehensive SMTP server checks for a domain
      operationId: smtpCheck
      requestBody:
        description: Domain to check
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMTPResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  /api/v1/smtp/connect/{host}:
    post:
      tags:
        - smtp
      summary: Test SMTP connection
      description: Tests basic SMTP connectivity to a server
      operationId: smtpConnect
      parameters:
        - name: host
          in: path
          description: Domain or IP of SMTP server
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMTPConnectionResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  /api/v1/smtp/starttls/{host}:
    post:
      tags:
        - smtp
      summary: Test STARTTLS support
      description: Tests if an SMTP server supports STARTTLS upgrade
      operationId: smtpStartTLS
      parameters:
        - name: host
          in: path
          description: Domain or IP of SMTP server
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMTPStartTLSResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /api/v1/smtp/relay-test:
    post:
      tags:
        - smtp
      summary: Test for open relay
      description: Tests if an SMTP server is configured as an open relay
      operationId: smtpRelayTest
      requestBody:
        description: SMTP relay test parameters
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SMTPRelayTestRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMTPRelayTestResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  # Email Authentication endpoints
  /api/v1/auth/spf/{domain}:
    post:
      tags:
        - email-auth
      summary: Check SPF record
      description: Validates SPF record for a domain
      operationId: spfCheck
      parameters:
        - name: domain
          in: path
          description: Domain to check
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SPFResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /api/v1/auth/dkim/{domain}/{selector}:
    post:
      tags:
        - email-auth
      summary: Check DKIM record
      description: Validates DKIM record for a domain and selector
      operationId: dkimCheck
      parameters:
        - name: domain
          in: path
          description: Domain to check
          required: true
          schema:
            type: string
        - name: selector
          in: path
          description: DKIM selector
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DKIMResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /api/v1/auth/dmarc/{domain}:
    post:
      tags:
        - email-auth
      summary: Check DMARC record
      description: Validates DMARC record for a domain
      operationId: dmarcCheck
      parameters:
        - name: domain
          in: path
          description: Domain to check
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DMARCResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  # Network Tools endpoints
  /api/v1/network/ping/{host}:
    post:
      tags:
        - network
      summary: Ping host
      description: Sends ICMP echo requests to a host
      operationId: pingHost
      parameters:
        - name: host
          in: path
          description: Host to ping
          required: true
          schema:
            type: string
        - name: count
          in: query
          description: Number of ping packets to send
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 20
            default: 4
        - name: timeout
          in: query
          description: Timeout in seconds
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 60
            default: 10
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /api/v1/network/traceroute/{host}:
    post:
      tags:
        - network
      summary: Traceroute to host
      description: Performs traceroute to a host
      operationId: tracerouteHost
      parameters:
        - name: host
          in: path
          description: Host to trace
          required: true
          schema:
            type: string
        - name: maxHops
          in: query
          description: Maximum number of hops
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 64
            default: 30
        - name: timeout
          in: query
          description: Timeout in seconds
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 60
            default: 30
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TracerouteResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                
  /api/v1/network/whois/{domain}:
    post:
      tags:
        - network
      summary: WHOIS lookup
      description: Performs WHOIS lookup for a domain
      operationId: whoisLookup
      parameters:
        - name: domain
          in: path
          description: Domain to lookup
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WHOISResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    CheckRequest:
      type: object
      required:
        - target
      properties:
        target:
          type: string
          description: Domain, IP, or other target to check
          example: example.com
        option:
          type: string
          description: Optional parameter for specific checks
          example: mx

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: Invalid domain name
        code:
          type: integer
          description: HTTP status code
          example: 400
        type:
          type: string
          description: Type of error
          example: validation_error
        details:
          type: string
          description: Additional error details
          example: Domain name cannot contain spaces
        validations:
          type: object
          additionalProperties: true
          description: Validation errors by field
          example:
            target: "invalid domain format"

    ValidationError:
      type: object
      properties:
        field:
          type: string
          description: Field that failed validation
          example: target
        message:
          type: string
          description: Validation error message
          example: invalid domain name format

    ValidationResult:
      type: object
      properties:
        valid:
          type: boolean
          description: Whether the validation passed
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'

    DNSResponse:
      type: object
      properties:
        records:
          type: object
          additionalProperties: true
          description: DNS records by type
          example:
            A: ["192.0.2.1"]
            MX: ["10 mail.example.com."]
            TXT: ["v=spf1 include:_spf.example.com ~all"]
        timing:
          type: string
          description: Time taken for the DNS lookups
          example: 245.3ms
        error:
          type: string
          description: Error message, if any
          example: timeout on NS lookup

    BlacklistResponse:
      type: object
      properties:
        ip:
          type: string
          description: IP address that was checked
          example: 192.0.2.1
        listedOn:
          type: object
          additionalProperties: true
          description: Results by blacklist zone
          example:
            "bl.spamcop.net": "Listed - see details at spamcop.net"
            "dnsbl.sorbs.net": "Listed as suspicious source"
        error:
          type: string
          description: Error message, if any
          example: null
          
    # SMTP Schemas
    SMTPResponse:
      type: object
      properties:
        connected:
          type: boolean
          description: Whether a connection could be established
          example: true
        supportsStartTLS:
          type: boolean
          description: Whether the server supports STARTTLS
          example: true
        error:
          type: string
          description: Error message, if any
          example: null
          
    SMTPConnectionResponse:
      type: object
      properties:
        host:
          type: string
          description: Host that was checked
          example: smtp.example.com
        port:
          type: integer
          description: Port that was checked
          example: 25
        connected:
          type: boolean
          description: Whether a connection could be established
          example: true
        latency:
          type: string
          description: Connection latency
          example: 45.3ms
        supportsStartTLS:
          type: boolean
          description: Whether the server supports STARTTLS
          example: true
        authMethods:
          type: array
          description: Supported authentication methods
          items:
            type: string
            example: LOGIN
        banner:
          type: string
          description: SMTP banner message
          example: 220 smtp.example.com ESMTP Service ready
        error:
          type: string
          description: Error message, if any
          example: null
          
    SMTPStartTLSResponse:
      type: object
      properties:
        host:
          type: string
          description: Host that was checked
          example: example.com
        mxRecords:
          type: array
          description: MX records for the domain
          items:
            type: string
            example: smtp.example.com
        connectionStatus:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SMTPConnectionResponse'
        error:
          type: string
          description: Error message, if any
          example: null
          
    SMTPRelayTestRequest:
      type: object
      required:
        - host
        - fromAddress
        - toAddress
      properties:
        host:
          type: string
          description: Host to test
          example: smtp.example.com
        port:
          type: integer
          description: Port to connect to
          default: 25
          example: 25
        fromAddress:
          type: string
          description: From email address
          example: sender@example.com
        toAddress:
          type: string
          description: To email address
          example: recipient@example.net
        timeout:
          type: integer
          description: Timeout in seconds
          default: 10
          example: 10
        authentication:
          type: boolean
          description: Whether to use authentication
          default: false
          example: false
        username:
          type: string
          description: Username for authentication
          example: user
        password:
          type: string
          description: Password for authentication
          example: pass
          
    SMTPRelayTestResponse:
      type: object
      properties:
        host:
          type: string
          description: Host that was tested
          example: smtp.example.com
        port:
          type: integer
          description: Port that was used
          example: 25
        isOpenRelay:
          type: boolean
          description: Whether the server is an open relay
          example: false
        authRequired:
          type: boolean
          description: Whether authentication is required
          example: true
        responseCode:
          type: integer
          description: SMTP response code
          example: 550
        responseText:
          type: string
          description: SMTP response text
          example: Relay access denied
        testDetails:
          type: string
          description: Details about the relay test
          example: Server requires authentication before relaying mail
        error:
          type: string
          description: Error message, if any
          example: null
          
    # Email Authentication Schemas
    SPFResponse:
      type: object
      properties:
        domain:
          type: string
          description: Domain that was checked
          example: example.com
        hasRecord:
          type: boolean
          description: Whether the domain has an SPF record
          example: true
        record:
          type: string
          description: The SPF record
          example: v=spf1 include:_spf.example.com ~all
        isValid:
          type: boolean
          description: Whether the SPF record is valid
          example: true
        mechanisms:
          type: array
          description: Parsed SPF mechanisms
          items:
            type: string
            example: include:_spf.example.com
        error:
          type: string
          description: Error message, if any
          example: null
          
    DKIMResponse:
      type: object
      properties:
        domain:
          type: string
          description: Domain that was checked
          example: example.com
        selector:
          type: string
          description: DKIM selector
          example: default
        hasRecords:
          type: boolean
          description: Whether DKIM records were found
          example: true
        records:
          type: object
          additionalProperties: true
          description: DKIM records
          example:
            "default._domainkey.example.com": "v=DKIM1; k=rsa; p=MIIBIjANBgkqhkiG9w0..."
        isValid:
          type: boolean
          description: Whether the DKIM records are valid
          example: true
        error:
          type: string
          description: Error message, if any
          example: null
          
    DMARCResponse:
      type: object
      properties:
        domain:
          type: string
          description: Domain that was checked
          example: example.com
        hasRecord:
          type: boolean
          description: Whether a DMARC record was found
          example: true
        record:
          type: string
          description: The DMARC record
          example: v=DMARC1; p=reject; sp=none; pct=100; rua=mailto:dmarc@example.com
        isValid:
          type: boolean
          description: Whether the DMARC record is valid
          example: true
        policy:
          type: string
          description: DMARC policy
          example: reject
        subdomainPolicy:
          type: string
          description: DMARC subdomain policy
          example: none
        percentage:
          type: integer
          description: DMARC percentage
          example: 100
        error:
          type: string
          description: Error message, if any
          example: null
          
    # Network Tools Schemas
    PingResponse:
      type: object
      properties:
        target:
          type: string
          description: Target that was pinged
          example: example.com
        resolvedIP:
          type: string
          description: Resolved IP address
          example: 192.0.2.1
        success:
          type: boolean
          description: Whether the ping was successful
          example: true
        rtts:
          type: array
          description: Round-trip times for each ping
          items:
            type: string
            example: 24.5ms
        avgRTT:
          type: string
          description: Average round-trip time
          example: 25.3ms
        minRTT:
          type: string
          description: Minimum round-trip time
          example: 24.2ms
        maxRTT:
          type: string
          description: Maximum round-trip time
          example: 26.7ms
        packetsSent:
          type: integer
          description: Number of packets sent
          example: 4
        packetsReceived:
          type: integer
          description: Number of packets received
          example: 4
        packetLoss:
          type: number
          description: Percentage of packet loss
          example: 0
        error:
          type: string
          description: Error message, if any
          example: null
        rawOutput:
          type: string
          description: Raw output from ping command
          example: "PING example.com (192.0.2.1): 56 data bytes..."
          
    TracerouteHopResponse:
      type: object
      properties:
        number:
          type: integer
          description: Hop number
          example: 1
        ip:
          type: string
          description: IP address of the hop
          example: 192.0.2.1
        hostname:
          type: string
          description: Hostname of the hop
          example: router.example.com
        rtt:
          type: string
          description: Round-trip time
          example: 12.3ms
        error:
          type: string
          description: Error message, if any
          example: null
          
    TracerouteResponse:
      type: object
      properties:
        target:
          type: string
          description: Target host
          example: example.com
        resolvedIP:
          type: string
          description: Resolved IP address
          example: 192.0.2.1
        hops:
          type: array
          description: Traceroute hops
          items:
            $ref: '#/components/schemas/TracerouteHopResponse'
        targetReached:
          type: boolean
          description: Whether the target was reached
          example: true
        error:
          type: string
          description: Error message, if any
          example: null
        rawOutput:
          type: string
          description: Raw output from traceroute command
          example: traceroute to example.com (192.0.2.1), 30 hops max...
          
    WHOISResponse:
      type: object
      properties:
        target:
          type: string
          description: Target domain or IP
          example: example.com
        registrar:
          type: string
          description: Domain registrar
          example: Example Registrar, Inc.
        createdDate:
          type: string
          description: Domain creation date
          example: 1995-08-14T04:00:00Z
        expirationDate:
          type: string
          description: Domain expiration date
          example: 2024-08-13T04:00:00Z
        nameServers:
          type: array
          items:
            type: string
            example: ns1.example.com
          description: Domain name servers
        rawData:
          type: string
          description: Raw WHOIS data
          example: "Domain Name: EXAMPLE.COM\nRegistry Domain ID: 2336799_DOMAIN_COM-VRSN\n..."
        error:
          type: string
          description: Error message, if any
          example: null
          
    NetworkToolResult:
      type: object
      properties:
        tool:
          type: string
          description: Tool that was used
          example: ping
        target:
          type: string
          description: Target that was checked
          example: example.com
        pingResult:
          $ref: '#/components/schemas/PingResponse'
        tracerouteResult:
          $ref: '#/components/schemas/TracerouteResponse'
        whoisResult:
          $ref: '#/components/schemas/WHOISResponse'
        error:
          type: string
          description: Error message, if any
          example: null